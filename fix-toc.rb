#!/usr/bin/ruby

require "rubygems"
require "nokogiri"

Dir.chdir(File.dirname(__FILE__))
#puts "Working Dir: " + Dir.pwd

# Reads out the page-attribute of the item elements inside 'toc.xml'
def getPageNrForTitle(title)
  toc_len = @toc.css('item').length
  for i in 0..toc_len-1 do 
    toc_title = @toc.css('item')[i]['title']
    pageNr = @toc.css('item')[i]['page']
    if title == toc_title
      return pageNr
    end
  end
  return "xx"
end

# Fix page numbers in the table of content, etc.
def setPageNr(typePlusID) 
  len = @page.css(typePlusID).css('li').length
  for i in 0..len-1 do 
    titleName = @page.css(typePlusID).css('li')[i].css('span')[0].text
    correctPage = getPageNrForTitle(titleName)
    pageSpan = @page.css(typePlusID).css('li')[i].css('span')[1]
    pageSpan.content = correctPage.to_i - 1
  end
end

# Start of the script

# Open the table of content generated by wkhtmltopdf
@toc = Nokogiri::HTML(open(".toc.xml"))

# Open the rendered output from a browser
@page = Nokogiri::HTML(open(".browser-output.html"))

# Remove all script-tags
@page.xpath("//script").remove

setPageNr('ul#toc')
setPageNr('ul#pictureDescriptions')
setPageNr('ul#sourceDescriptions')
setPageNr('ul#tableDescriptions')

# Write out the altered HTML-File
File.write(".browser-output-fixed-toc.html", @page.to_xml)
puts "Temp-file written to '.browser-output-fixed-toc.html'"